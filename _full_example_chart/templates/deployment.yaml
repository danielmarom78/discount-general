{{- $uniqueValue := sha256sum .Values.uniqueValue  -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  annotations:
    argocd.argoproj.io/sync-wave: '10'
spec:
  replicas: 1
  revisionHistoryLimit: 0

  selector:
    matchLabels:
      app: {{ .Release.Name }}

  template:
    metadata:
      annotations:
        checksum/config: {{ $uniqueValue }}
      labels:
        app: {{ .Release.Name }} 
        unique: {{ .Values.uniqueValue }}
        type: deployment
        chartVer: {{.Chart.Version | quote}}
    spec:
      containers:
      - name: service
        image: {{ .Values.imageName }}
        imagePullPolicy: IfNotPresent

        {{- with .Values.service.mainCommandArgs }}
        args: {{ toJson . }}
        {{- end }}
        {{- with .Values.service.mainCommand }}
        command: {{ toJson . }}
        {{- end }}
        {{- with .Values.service.resources }}
        resources: {{ toJson . }}
        {{- end }}

      initContainers:
      - name: waiter
        image: {{ .Values.imageName }}
        imagePullPolicy: IfNotPresent

        {{- with .Values.service.initCommandArgs }}
        args: {{ toJson . }}
        {{- end }}
        {{- with .Values.service.initCommand }}
        command: {{ toJson . }}
        {{- end }}

        # static resources for the init container as it just runs /bin/sh
        resources:
          limits:
            cpu: 10m
            memory: 32Mi

        env:
        - name: {{ .Values.jobOutputFileEnvVar }}
          value: {{ printf "/mnt/job-outputs/%s-%s" .Release.Name $uniqueValue}}

        volumeMounts:
        - name: job-outputs
          mountPath: /mnt/job-outputs

      volumes:
      - name: job-outputs
        persistentVolumeClaim:
          claimName: common-pvc
